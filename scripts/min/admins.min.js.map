{"version":3,"sources":["bargraph/admin.js","choropleth/admin.js","googlemaps/admin.js","html/admin.js","image/admin.js","scatterplot/admin.js","soundcloud/admin.js","splash/admin.js","table/admin.js","text/admin.js","vimeo/admin.js","youtube/admin.js","vine/admin.js"],"names":["$","loadData","block","container","find","get","json","val","data","JSON","parse","initTable","url","snowball","pluginsUrl","getJSON","colHeaders","columns","type","hot","Handsontable","rowHeaders","fixedRowsTop","columnSorting","manualColumnMove","manualColumnResize","contextMenu","multiSelect","persistantState","fillHandle","observeChanges","search","undo","readOnly","stretchH","afterChange","changes","source","this","getData","refreshOnChange","trigger","afterLoadData","afterInit","generatedJSON","jsonString","stringify","on","size","text","closest","iframe","map","contents","draw","contentWindow","drawBargraph","jQuery","mapType","reloadData","updateSettings","render","quantize","drawMap","mapParse","re","matches","exec","zoom","maptype","mToZ","lat","lon","m","c","z","parseInt","Math","round","log","LN2","props","prop","textarea","editor","CodeMirror","fromTextArea","mode","lineNumbers","lineWrapping","indentUnit","tabSize","theme","setSize","save","borderradius","document","ready","index","tb_show","window","original_send_to_editor","send_to_editor","html","eq","imgurl","attr","tb_remove","drawScatterplot","getTrackId","indexOf","getSoundCloudUrl","id","options","soundCloudUrl","key","hasOwnProperty","soundCloudLink","show_user","show_comments","visual","soundcloud_options","trackId","trackUrl","counter","quicktags","buttons","QTags","_buttonsInit","createTable","HTML","numRows","length","i","j","e","afterCreateRow","afterCreateCol","afterRemoveRow","afterRemoveCol","addButton","parseVideoURL","videoUrl","videoID","inputColor","outputColor","substring"],"mappings":"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","file":"admins.min.js","sourcesContent":["(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var size = $(this).find(\".size\").val() + \"px\";\n    $(this).find(\".size-output\").text(size);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-bargraph .size\", function() {\n    var block = $(this).closest(\".snowball-block-bargraph\");\n    var size = $(this).val() + \"px\";\n\n    block.find(\".size-output\").text(size);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawBargraph;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-bargraph\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data);\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"label\", \"value\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"Values\"];\n    var columns = [{data: \"label\", type: \"text\"}, {data: \"value\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var quantize = block.find(\"[data-target='quantize']\").val();\n\n    $(this).find(\".quantize-output\").text(quantize);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".map\");\n    var draw = iframe[0].contentWindow.drawMap;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-choropleth\"));\n    }\n  });\n\n  $(\"#snowball-main\").on(\"change\", \".snowball-block-choropleth [data-target='map-type']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var mapType = $(this).val();\n\n    reloadData(block, mapType);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-choropleth [data-target='quantize']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var hot = block.data(\"hot\");\n    var quantize = $(this).val();\n\n    block.find(\".quantize-output\").text(quantize);\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data, mapType); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data, mapType);\n      });\n    }\n  }\n\n  function reloadData(block, mapType) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var colHeaders;\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n      colHeaders = [\"fips\", \"Country\", \"Value\"];\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data, mapType) {\n    var colHeaders = [\"fips\", \"Country\", \"Value\"];\n\n    if (mapType === \"usa\") {\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    }\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: [{data: \"fips\", readOnly: true}, {data: \"State\", readOnly: true}, {data: \"Value\"}],\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n\n    block.find(\"[data-target='json-\" + mapType + \"']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-googlemaps\", function() {\n    var zoom = $(this).find(\".zoom\").val();\n    $(this).find(\".zoom-output\").text(zoom);\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-googlemaps .map-user\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var url = $(this).val();\n    var props = mapParse(url);\n\n    block.find(\"[data-target='lat']\").val(props.lat);\n    block.find(\"[data-target='lon']\").val(props.lon);\n    block.find(\"[data-target='zoom']\").val(props.zoom);\n    block.find(\".zoom-output\").text(props.zoom);\n    block.find(\"[data-target='maptype'][value='\" + props.maptype +  \"']\").prop(\"checked\", true);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-googlemaps .zoom\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var zoom = $(this).val();\n\n    block.find(\".zoom-output\").text(zoom);\n  });\n\n  function mapParse(url) {\n    var re = /google.com\\/maps\\/.*@(-?\\d+.\\d+),(-?\\d+.\\d+),(\\d+)([mz])/;\n    var matches = re.exec(url);\n\n    if (matches !== null) {\n      var zoom = matches[3];\n      var maptype = matches[4];\n      var size = \"600x400\";\n\n      if (maptype === \"m\") {\n        maptype = \"satellite\";\n        zoom = mToZ(zoom);\n      } else {\n        maptype = \"roadmap\";\n      }\n\n      return {\n        \"lat\": matches[1],\n        \"lon\": matches[2],\n        \"maptype\": maptype,\n        \"zoom\": zoom,\n        \"size\": size\n      };\n    }\n  }\n\n  function mToZ(m) {\n    var c = 56819712;\n    var z = c / parseInt(m, 10);\n\n    z = Math.round(1 + (Math.log(z) / Math.LN2));\n\n    return z;\n  }\n\n})(jQuery);\n","(function($) {\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-html\", function() {\n\n      var block = $(this);\n      var textarea = block.find(\"textarea\");\n\n      var editor = CodeMirror.fromTextArea(textarea[0], {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        lineWrapping: true,\n        indentUnit: 2,\n        tabSize: 2,\n        theme: \"monokai\"\n      });\n\n      editor.setSize(\"100%\", \"100%\");\n\n      editor.on(\"change\", function() {\n        editor.save();\n        textarea.trigger(\"change\");\n      });\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-image\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-image .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var size = $(this).find(\".size\").val() + \"px\";\n    $(this).find(\".size-output\").text(size);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-scatterplot .size\", function() {\n    var block = $(this).closest(\".snowball-block-scatterplot\");\n    var size = $(this).val() + \"px\";\n\n    block.find(\".size-output\").text(size);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawScatterplot;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-scatterplot\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/scatterplot/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n    var columns = [{data: \"Label\", type: \"text\"}, {data: \"X\", type: \"numeric\"}, {data: \"Y\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n  function getTrackId(url) {\n    var re;\n\n    if (url && url.indexOf(\"api.soundcloud.com/tracks\") >= 0) {\n      re = /api.soundcloud.com\\/tracks\\/(\\d+&)/;\n      var matches = re.exec(url);\n      if (matches[1]) {\n        return matches[1];\n      }\n    }\n\n    return \"\";\n  }\n\n  function getSoundCloudUrl(id, options) {\n    var soundCloudUrl = \"https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/\";\n    soundCloudUrl = soundCloudUrl + id + \"&show_reposts=false&auto_play=false\"\n    for (var key in options) {\n      if (options.hasOwnProperty(key)) {\n        soundCloudUrl = soundCloudUrl + \"&\" + key + \"=\" + options[key];\n      }\n    }\n    return soundCloudUrl;\n  }\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n    $(block).find(\".track-url\").val(trackUrl);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n\n    $(block).find(\".track-url\").val(trackUrl);\n    block.trigger(\"render\");\n  });\n})(jQuery);\n","(function($) {\n\n  var counter = 0;\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-splash\", function() {\n    var textarea = $(this).find(\"textarea\");\n    var id = \"snowball-block-splash-textarea-\" + counter;\n    textarea.attr(\"id\", id);\n    counter++;\n\n    quicktags({\n      id : id,\n      buttons: \"strong,em,link,blockquote,del,code,close\"\n    });\n\n    QTags._buttonsInit();\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .quicktags-toolbar .button\", function() {\n    $(this).closest(\".snowball-block\").trigger(\"render\");\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n  });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-table\", function() {\n      var block = $(this);\n      var container = block.find(\".table\").get(0);\n      var data = JSON.parse(block.find(\"[data-target='JSON']\").val());\n\n      var hot = new Handsontable(container, {\n        data: data,\n        rowHeaders: false,\n        fixedRowsTop: 1,\n        colHeaders: true,\n        columnSorting: false,\n        manualColumnMove: false,\n        manualColumnResize: false,\n        contextMenu: true,\n        multiSelect: true,\n        persistantState: true,\n        fillHandle: true,\n        observeChanges: true,\n        search: true,\n        undo: true,\n        readOnly: false,\n        stretchH: \"all\",\n        afterChange: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterCreateRow: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterCreateCol: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterRemoveRow: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterRemoveCol: function (e) {\n          refreshOnChange(block, data);\n        }\n      });\n    });\n\n    function refreshOnChange(block, data) {\n      var jsonString = JSON.stringify(data);\n\n      block.find(\"[data-target='JSON']\").val(jsonString);\n      block.find(\"[data-target='HTML']\").val(createTable(data));\n\n      block.trigger(\"render\");\n    }\n\n    function createTable(JSON) {\n      var HTML = \"  <table>\\n\";\n      var numRows = JSON.length;\n\n      for (var i = 0; i < numRows; i++) {\n        if (i === 0) {\n          HTML = HTML + \"    <thead>\\n\";\n        } else if (i === 1) {\n          HTML = HTML + \"    </thead>\\n    <tbody>\\n\";\n        }\n        HTML = HTML + \"      <tr>\\n\";\n        for (var j = 0; j < JSON[i].length; j++) {\n          if (JSON[i][j] === null) {\n            JSON[i][j] = \"\";\n          }\n\n          if (i === 0) {\n            HTML = HTML + \"        <th>\" + JSON[i][j] + \"</th>\\n\";\n          } else {\n            HTML = HTML + \"        <td>\" + JSON[i][j] + \"</td>\\n\";\n          }\n        }\n\n        HTML = HTML + \"      </tr>\\n\";\n      }\n\n      HTML = HTML + \"    </tbody>\\n  </table>\";\n\n      return HTML;\n    }\n\n})(jQuery);","(function($) {\n    var counter = 0;\n    QTags.addButton(\"eg_hr\", \"hr\", \"<hr />\", \"\", \"h\", \"Horizontal rule line\", 70);\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-text\", function() {\n      var textarea = $(this).find(\"textarea\");\n      var id = \"snowball-block-text-textarea-\" + counter;\n      textarea.attr(\"id\", id);\n      counter++;\n\n      quicktags({\n        id : id,\n        buttons: \"strong,em,link,blockquote,del,code,ul,ol,li,code,close\"\n      });\n\n      QTags._buttonsInit();\n    });\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-text .quicktags-toolbar .button\", function() {\n      $(this).closest(\".snowball-block\").trigger(\"render\");\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vimeo\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo [data-target='control-color-input']\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var inputColor = $(this).val();\n    var outputColor = \"&color=\" + inputColor.substring(1);\n    $(\"[data-target='control-color-output']\").val(outputColor);\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"video\") >= 0) {\n      re = /vimeo.com.*video\\/(\\S*)\"/;\n    } else {\n      re = /vimeo.com\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n\n    return matches[1];\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-youtube\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-youtube .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-youtube\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /youtube.com.*embed\\/(\\S*)\"/;\n    } else {\n      re = /youtube.com.*v=(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n\n    return matches[1];\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vine\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vine .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-vine\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /vine.co\\/v\\/(.*)\\/embed/;\n    } else {\n      re = /vine.co\\/v\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    return matches[1];\n  }\n})(jQuery);\n"],"sourceRoot":"/source/"}